boolean add(E obj)
    Adds obj to the invoking collection. Returns true if
    obj was added to the collection. Returns false if obj is
    already a member of the collection and the collection
    does not allow duplicates.

boolean addAll(Collection<? extends E> c)
    Adds all the elements of c to the invoking collection.
    Returns true if the collection changed (i.e., the
    elements were added). Otherwise, returns false

void clear( )
    Removes all elements from the invoking collection

boolean contains(Object obj)
    Returns true if obj is an element of the invoking
    collection. Otherwise, returns false.

boolean containsAll(Collection<?> c
    Returns true if the invoking collection contains all
    elements of c. Otherwise, returns false.

boolean equals(Object obj)
    Returns true if the invoking collection and obj are
    equal. Otherwise, returns false.

int hashCode( )
    Returns the hash code for the invoking collection

Iterator<E> iterator( )
    Returns an iterator for the invoking collection

default Stream<E> parallelStream( )
    Returns a stream that uses the invoking collection
    as its source for elements. If possible, the stream
    supports parallel operations. (Added by JDK 8.)

boolean remove(Object obj)
    Removes one instance of obj from the invoking
    collection. Returns true if the element was removed.
    Otherwise, returns false.

boolean removeAll(Collection<?> c)
    Removes all elements of c from the invoking collection.
    Returns true if the collection changed (i.e., elements
    were removed). Otherwise, returns false.

default boolean removeIf(Predicate<? super E> predicate
    Removes from the invoking collection those elements
    that satisfy the condition specified by predicate. (Added
    by JDK 8.)

boolean retainAll(Collection<?> c)
    Removes all elements from the invoking collection
    except those in c. Returns true if the collection changed
    (i.e., elements were removed). Otherwise, returns false.

int size( )
    Returns the number of elements held in the invoking
    collection.

default Spliterator<E> spliterator( )
    Returns a spliterator to the invoking collections.
    (Added by JDK 8.)

default Stream<E> stream( )
    Returns a stream that uses the invoking collection
    as its source for elements. The stream is sequential.
    (Added by JDK 8.)

Object[ ] toArray( )
    Returns an array that contains all the elements stored
    in the invoking collection. The array elements are
    copies of the collection elements.

<T> T[ ] toArray(T array[ ])
    Returns an array that contains the elements of the
    invoking collection. The array elements are copies
    of the collection elements. If the size of array equals
    the number of elements, these are returned in
    array. If the size of array is less than the number
    of elements, a new array of the necessary size is
    allocated and returned. If the size of array is greater
    than the number of elements, the array element
    following the last collection element is set to null.
    An ArrayStoreException is thrown if any collection
    element has a type that is not a subtype of array.